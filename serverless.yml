service: change-thundra-demo

plugins:
  - serverless-deployment-bucket
  - serverless-localstack # only activated when stage is "local"

custom:
  stage: ${opt:stage, "local"}
  region: ${opt:region, "us-east-1"}
  artifact: ${opt:artifact, "./target/thundra-demo-localstack.jar"}
  deploymentBucketName: ${self:service}-deployment-bucket-${self:custom.stage}
  tableName: ${self:service}-PLACEHOLDER_PRODUCTS_TABLE_NAME-${self:custom.stage}
  bucketName: ${self:service}-archive-bucket-${self:custom.stage}
  queueName: ${self:service}-request-queue-${self:custom.stage}
  topicName: ${self:service}-request-topic-${self:custom.stage}
  localstack:
    stages:
      # list of stages for which the plugin should be enabled
      - local
    debug: true
    autostart: true

package:
  artifact: ${self:custom.artifact}

provider:
  name: aws
  runtime: java8
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  memorySize: ${opt:memory, 512}
  timeout: ${opt:timeout, 60}
  deploymentBucket:
    name: ${self:custom.deploymentBucketName}
  environment:
    PRODUCTS_TABLE_NAME: ${self:custom.tableName}
    REQUEST_QUEUE_URL:
      Ref: requestQueue
    REQUEST_TOPIC_ARN:
      Ref: requestTopic
    ARCHIVE_BUCKET_NAME: ${self:custom.bucketName}
    THUNDRA_APIKEY: ${env:THUNDRA_APIKEY}

functions:
  http_handleRequest:
    handler: io.thundra.demo.localstack.handler.App
    events:
      - http:
          path: /products
          method: post
      - http:
          path: /products
          method: get

resources:
  Resources:
    appDatabase:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    archiveBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
    requestQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.queueName}
        VisibilityTimeout: 60
    requestTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.topicName}
